name: Build and Deploy Code

on:
  - push
  - pull_request

jobs:
  job1:
    environment: 
      name: Testing
    # env:
    #   DATABASE_HOSTNAME: ${{ secrets.DATABASE_HOSTNAME }}
    #   DATABASE_PORT: ${{ secrets.DATABASE_PORT }}
    #   DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
    #   DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
    #   DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
    #   SECRET_KEY: ${{ secrets.SECRET_KEY }}
    #   ALGORITHM: ${{ secrets.ALGORITHM }}
    #   ACCESS_TOKEN_EXPIRE_MINUTES: ${{ secrets.ACCESS_TOKEN_EXPIRE_MINUTES }}
    
    env:
      DATABASE_HOSTNAME: localhost
      DATABASE_PORT: 5432
      DATABASE_PASSWORD: Depine123
      DATABASE_USERNAME: postgres
      DATABASE_NAME: fastapi
      SECRET_KEY: 7e14c84ba93ef43d2977e2dc9d5a53657ef3bb583c5b25382c62f7b6940f1ec5
      ALGORITHM: HS256
      ACCESS_TOKEN_EXPIRE_MINUTES: 60
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: ${{ secrets.DATABASE_USERNAME }}
          POSTGRES_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
          POSTGRES_DB: ${{ secrets.DATABASE_NAME }}_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        
        

    runs-on: ubuntu-latest
    steps:
      - name: Pulling git Repo
        uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Upgrade pip
        run: python -m pip install --upgrade pip
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Print environment variables
        run: |
          echo "DATABASE_HOSTNAME: ${{ secrets.DATABASE_HOSTNAME }}"
          echo "DATABASE_PORT: $DATABASE_PORT"
          echo "DATABASE_NAME: $DATABASE_NAME"
          echo "DATABASE_USERNAME: $DATABASE_USERNAME"
          # Do not print sensitive information like DATABASE_PASSWORD, SECRET_KEY, etc.
      - name: Run tests
        run: |
          pip install pytest
          pytest -v 
  

      